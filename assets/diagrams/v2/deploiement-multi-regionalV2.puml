@startuml Déploiement Multi-Régional International
!theme plain

cloud "Global DNS & CDN" {
  [Route 53 DNS] as DNS
  [CloudFront CDN] as CDN
}

cloud "Region: Europe (eu-west-1)" {
  node "EU Load Balancer" as EU_LB {
    [Nginx EU] as EU_Nginx
  }

  node "EU Kubernetes Cluster" as EU_K8s {
    [Auth Service EU] as EU_Auth
    [User Service EU] as EU_User
    [Reservation Service EU] as EU_Reservation
    [Vehicle Service EU] as EU_Vehicle
    [Support Service EU] as EU_Support
    [Notification Service EU] as EU_Notification
  }

  node "EU Database Cluster" as EU_DB {
    database "Auth DB EU" as EU_AuthDB
    database "User DB EU" as EU_UserDB
    database "Reservation DB EU" as EU_ReservationDB
    database "Vehicle DB EU" as EU_VehicleDB
    database "Support DB EU" as EU_SupportDB
    database "Notification DB EU" as EU_NotificationDB
  }

  node "EU Cache Cluster" as EU_Cache {
    [Redis EU] as EU_Redis
    [ACRISS Cache EU] as EU_AcrissCache
  }

  node "EU Message Broker" as EU_MQ {
    [Kafka EU] as EU_Kafka
  }
}

cloud "Region: US East (us-east-1)" {
  node "US Load Balancer" as US_LB {
    [Nginx US] as US_Nginx
  }

  node "US Kubernetes Cluster" as US_K8s {
    [Auth Service US] as US_Auth
    [User Service US] as US_User
    [Reservation Service US] as US_Reservation
    [Vehicle Service US] as US_Vehicle
    [Support Service US] as US_Support
    [Notification Service US] as US_Notification
  }

  node "US Database Cluster" as US_DB {
    database "Auth DB US" as US_AuthDB
    database "User DB US" as US_UserDB
    database "Reservation DB US" as US_ReservationDB
    database "Vehicle DB US" as US_VehicleDB
    database "Support DB US" as US_SupportDB
    database "Notification DB US" as US_NotificationDB
  }

  node "US Cache Cluster" as US_Cache {
    [Redis US] as US_Redis
    [ACRISS Cache US] as US_AcrissCache
  }

  node "US Message Broker" as US_MQ {
    [Kafka US] as US_Kafka
  }
}

cloud "Region: UK (eu-west-2)" {
  node "UK Load Balancer" as UK_LB {
    [Nginx UK] as UK_Nginx
  }

  node "UK Kubernetes Cluster" as UK_K8s {
    [Auth Service UK] as UK_Auth
    [User Service UK] as UK_User
    [Reservation Service UK] as UK_Reservation
    [Vehicle Service UK] as UK_Vehicle
    [Support Service UK] as UK_Support
    [Notification Service UK] as UK_Notification
  }

  node "UK Database Cluster" as UK_DB {
    database "Auth DB UK" as UK_AuthDB
    database "User DB UK" as UK_UserDB
    database "Reservation DB UK" as UK_ReservationDB
    database "Vehicle DB UK" as UK_VehicleDB
    database "Support DB UK" as UK_SupportDB
    database "Notification DB UK" as UK_NotificationDB
  }

  node "UK Cache Cluster" as UK_Cache {
    [Redis UK] as UK_Redis
    [ACRISS Cache UK] as UK_AcrissCache
  }

  node "UK Message Broker" as UK_MQ {
    [Kafka UK] as UK_Kafka
  }
}

cloud "Global Shared Services" {
  [Master Vehicle Catalog] as GlobalVehicles
  [ACRISS Standards Service] as ACRISS
  [Global Agency Directory] as GlobalAgencies
}

cloud "ACRISS Organization Services" {
  [Official ACRISS API] as OfficialACRISS
}

' Global traffic routing
DNS --> CDN
CDN --> EU_LB : European traffic\n(GDPR compliant)
CDN --> US_LB : US traffic\n(CCPA compliant)
CDN --> UK_LB : UK traffic\n(Post-Brexit compliant)

' Cross-region replication pour données critiques
EU_Kafka <--> US_Kafka : Cross-region\nreplication
US_Kafka <--> UK_Kafka : Cross-region\nreplication
UK_Kafka <--> EU_Kafka : Cross-region\nreplication

' Accès aux services partagés globaux
EU_Vehicle --> GlobalVehicles : Read-only access
US_Vehicle --> GlobalVehicles : Read-only access
UK_Vehicle --> GlobalVehicles : Read-only access

EU_Vehicle --> ACRISS : Standards lookup
US_Vehicle --> ACRISS : Standards lookup
UK_Vehicle --> ACRISS : Standards lookup

' Connexions vers le service ACRISS officiel externe
EU_Vehicle --> OfficialACRISS : HTTPS/REST API
US_Vehicle --> OfficialACRISS : HTTPS/REST API
UK_Vehicle --> OfficialACRISS : HTTPS/REST API

' Connexions des caches ACRISS vers les services Vehicle
EU_Vehicle --> EU_AcrissCache : Cache ACRISS
US_Vehicle --> US_AcrissCache : Cache ACRISS
UK_Vehicle --> UK_AcrissCache : Cache ACRISS

note top of CDN
  CloudFront CDN distribue
  les assets statiques (Angular)
  avec latence optimisée
end note

note right of EU_Kafka
  Kafka Mirror Maker assure
  la synchronisation des événements
  critiques entre régions
end note

note bottom of GlobalVehicles
  Données partagées globalement :
  - Catalogue véhicules ACRISS
  - Référentiel agences
  - Standards internationaux
end note

note bottom of OfficialACRISS
  Service ACRISS Officiel Externe

  - API REST officielle ACRISS (https://api.acriss.org/)
  - Standards toujours à jour
  - Cache régional (TTL 24h) pour performance
  - Fallback vers données locales en cas de panne
  - Circuit Breaker : 5 échecs → mode dégradé
end note
@enduml