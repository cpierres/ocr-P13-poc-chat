
# Définition des upstreams
upstream frontend_server {
    server frontend:80;
}

upstream backend_server {
    server backend:8083;
}

# Configuration du serveur
server {
    listen 80;
    server_name chatpoc.cpierres.dscloud.me localhost _;

    # Headers communs
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;

    # Headers CORS globaux
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials true always;

    # API Backend - toutes les routes /api/*
    location /api/ {
        proxy_pass http://backend_server/api/;

        # Timeouts pour les APIs
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket - Configuration cruciale pour SockJS/STOMP
    location /ws/ {
        proxy_pass http://backend_server/ws/;
        proxy_http_version 1.1;

        # Headers WebSocket essentiels
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts longs pour maintenir les connexions WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # Désactiver le buffering pour les WebSockets
        proxy_buffering off;
        proxy_request_buffering off;

        # Headers supplémentaires pour SockJS
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Frontend - servir les fichiers statiques Angular (dernière règle)
    location / {
        proxy_pass http://frontend_server;
        proxy_redirect off;

        # Headers pour le frontend
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Gestion des logs pour debug
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;
}